@model IEnumerable<ShoppingCart.Models.CartItem>

@{
    ViewData["Title"] = "Shopping Cart";
}

<h2>@ViewData["Title"]</h2>
@* 
@if (TempData["success"] != null)
{
    <script type="text/javascript">
        showAlert('@TempData["success"]');
    </script>
} *@

<!-- Include your JavaScript file -->
<script src="~/js/site.js"></script>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info">
        Your cart is empty.
    </div>
}
else
{
    <form id="cart-form" method="post">
        <table class="table">
            <thead>
                <tr class="table-responsive table-success"> 
                    <th>Name</th>
                    <th>Price</th>
                    <th>Product Image</th>
                    <th>Description</th>
                    <th>Quantity</th>
                    <th>Total Amount</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-available-quantity="@item.Quantity" data-id="@item.CartId">
                        <td>@item.Name</td>
                        <td>@item.Price.ToString("C")</td>
                        <td>
                            <img src="~/Images/@item.ProductImage" class="img-thumbnail" width="60" height="60" alt="Product Image" />
                        </td>
                        <td>@item.Description</td>
                        <td>
                            <input type="number" class="form-control quantity-input" data-price="@item.Price" data-id="@item.CartId" value="@item.QNTY" onchange="updateTotalAmount(this)" min="1" />
                            <span class="error-message" style="color: red; display: none;"></span>
                            <span class="zero-quantity-message" style="color: red; display: none;">Quantity cannot be zero or negative.</span>
                        </td>
                        <td class="total-amount">
                            @item.TotalAmount.ToString("C")
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="confirmRemove('@item.CartId')">Remove</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <!-- Add checkout button here -->
        <div>
            <button type="button" class="btn btn-primary" id="checkoutBtn">Checkout</button>
        </div>
    </form>
}
<!-- Checkout Modal -->
<div class="modal fade" id="checkoutModal" tabindex="-1" role="dialog" aria-labelledby="checkoutModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="checkoutModalLabel">Checkout Summary</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody id="checkoutTableBody">
                        <!-- Rows will be populated by JavaScript -->
                    </tbody>
                </table>
                <div class="text-right">
                    <strong>Total Amount: <span id="checkoutTotalAmount"></span></strong>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="confirmCheckoutBtn">Confirm Checkout</button>
            </div>
        </div>
    </div>
</div>

<!-- Remove Confirmation Modal -->
<div class="modal fade" id="removeModal" tabindex="-1" role="dialog" aria-labelledby="removeModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="removeModalLabel">Confirm Removal</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to remove this item from the cart?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmRemoveBtn">Remove</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
  

    <script>
        document.getElementById('checkoutBtn').addEventListener('click', function () {
            var rows = document.querySelectorAll('tr[data-id]');
            var checkoutTableBody = document.getElementById('checkoutTableBody');
            var checkoutTotalAmount = 0;

            checkoutTableBody.innerHTML = ''; // Clear previous data

            rows.forEach(function (row) {
                var name = row.querySelector('td:nth-child(1)').innerText;
                var price = parseFloat(row.querySelector('td:nth-child(2)').innerText.replace(/[^0-9.-]+/g, ""));
                var quantity = parseInt(row.querySelector('.quantity-input').value);
                var total = price * quantity;
                checkoutTotalAmount += total;

                var tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${name}</td>
                    <td>${price.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}</td>
                    <td>${quantity}</td>
                    <td>${total.toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}</td>
                `;
                checkoutTableBody.appendChild(tr);
            });

            document.getElementById('checkoutTotalAmount').innerText = checkoutTotalAmount.toLocaleString('en-IN', { style: 'currency', currency: 'INR' });

            $('#checkoutModal').modal('show');
        });

        document.getElementById('confirmCheckoutBtn').addEventListener('click', function () {
            var cartItems = [];
            var valid = true;

            document.querySelectorAll('tr[data-id]').forEach(function (row) {
                var cartId = row.getAttribute('data-id');
                var quantity = parseInt(row.querySelector('.quantity-input').value);
                var price = parseFloat(row.querySelector('td:nth-child(2)').innerText.replace(/[^0-9.-]+/g, ""));
                var totalAmount = quantity * price;

                if (quantity <= 0) {
                    valid = false;
                    row.querySelector('.zero-quantity-message').style.display = 'block';
                } else {
                    row.querySelector('.zero-quantity-message').style.display = 'none';
                }

                if (quantity > 0) {
                    cartItems.push({
                        CartId: cartId,
                        Quantity: quantity,
                        Price: price,
                        TotalAmount: totalAmount
                    });
                }
            });

            if (!valid) {
                alert('Please correct the errors in your cart before proceeding.');
                return;
            }

            fetch('@Url.Action("Checkout", "Order")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(cartItems)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Checkout successful!');
                        location.reload();
                    } else {
                        alert('Error: ' + data.error);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred during checkout.');
                });
        });

        let currentRemoveId = null;

        function updateTotalAmount(inputElement) {
            var price = parseFloat(inputElement.getAttribute('data-price'));
            var quantity = parseInt(inputElement.value);
            var row = inputElement.closest('tr');
            var availableQuantity = parseInt(row.getAttribute('data-available-quantity'));
            var errorMessage = row.querySelector('.error-message');
            var zeroQuantityMessage = row.querySelector('.zero-quantity-message');

            if (quantity <= 0) {
                zeroQuantityMessage.innerText = 'Quantity cannot be zero or negative.';
                zeroQuantityMessage.style.display = 'block';
                errorMessage.style.display = 'none';
                row.querySelector('.total-amount').innerText = '';
                return;
            } else {
                zeroQuantityMessage.style.display = 'none';
            }

            if (quantity > availableQuantity) {
                errorMessage.innerText = `Quantity cannot exceed available stock (${availableQuantity}).`;
                errorMessage.style.display = 'block';
                row.querySelector('.total-amount').innerText = '';
                return;
            } else {
                errorMessage.style.display = 'none';
            }

            var totalAmount = price * quantity;
            row.querySelector('.total-amount').innerText = totalAmount.toLocaleString('en-IN', { style: 'currency', currency: 'INR' });
        }

        function confirmRemove(cartId) {
            currentRemoveId = cartId;
            $('#removeModal').modal('show');
        }

        document.getElementById('confirmRemoveBtn').addEventListener('click', function () {
            if (currentRemoveId) {
                location.href = '@Url.Action("RemoveFromCart", "Cart", new { id = "__id__" })'.replace('__id__', currentRemoveId);
            }
        });

    </script>
    

}
